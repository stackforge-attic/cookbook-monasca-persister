name: mon-persister

alarmHistoryConfiguration:
  topic:   <%= @settings['alarm_history']['topic'] %>

metricConfiguration:
  topic:   <%= @settings['metrics']['topic'] %>

#Kafka settings.
kafkaConfiguration:
# See http://kafka.apache.org/documentation.html#api for semantics and defaults.
  numThreads: <%= @settings['kafka']['num_threads'] %>
  groupId: <%= @settings['kafka']['group_id'] %>
  zookeeperConnect: <%= @settings['zookeeper']['hostname'] %>:2181
  consumerId: <%= #If only 1 consumer id only one box will run at a time, if consumer id for each fqdn they will all run
  if @settings['kafka']['consumer_id'].is_a? Integer
    @settings['kafka']['consumer_id']
  else
    @settings['kafka']['consumer_id'][node[:fqdn]]
  end
  %>
  socketTimeoutMs: 30000
  socketReceiveBufferBytes : 65536
  fetchMessageMaxBytes: 1048576
  autoCommitEnable: true
  autoCommitIntervalMs: 60000
  queuedMaxMessageChunks: 10
  rebalanceMaxRetries: 4
  fetchMinBytes:  1
  fetchWaitMaxMs:  100
  rebalanceBackoffMs: 2000
  refreshLeaderBackoffMs: 200
  autoOffsetReset: largest
  consumerTimeoutMs:  -1
  clientId : 1
  zookeeperSessionTimeoutMs : 60000
  zookeeperConnectionTimeoutMs : 60000
  zookeeperSyncTimeMs: 2000

disruptorConfiguration:
  bufferSize:  <%= @settings['disruptor']['buffer_size'] %>
  numProcessors: <%= @settings['disruptor']['num_processors'] %>

outputProcessorConfiguration:
  batchSize: <%= @settings['output_processor']['batch_size'] %>

monDeDuperConfiguration:
  dedupeRunFrequencySeconds: <%= @setting['deduper_config']['dedupe_run_frequencey_seconds'] %>

verticaMetricRepositoryConfiguration:
  maxCacheSize: <%= @settings['vertica_metric_repository_config']['max_cache_size'] %>

databaseConfiguration:
# vertica | influxdb
  databaseType: <%= @settings['database_configuration']['database_type'] %>

# Uncomment if databaseType is influxdb
#influxDBConfiguration:
#  name: mon
#  replicationFactor: 1
#  url: http://127.0.0.1:8086
#  user:  root
#  password: root

# Uncomment if databaseType is vertica
dataSourceFactory:
  driverClass: com.vertica.jdbc.Driver
#  url: jdbc:vertica://mon-aw1rdd1-vertica0001.rndd.aw1.hpcloud.net:5433/som
  url: jdbc:vertica://<%= @settings['vertica']['hostname']%>:5433/<%= @settings['vertica']['dbname'] %>
  user: <%= @credentials['vertica']['user']%>
  password: <%= @credentials['vertica']['password'] %>
  properties:
      ssl: false
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open


  maxSize: 41

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false


  # the maximum lifetime of an idle connection
  maxConnectionAge: 1 minute


metrics:
  frequency: 1 second


# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO,
  # DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
      com.example.app: DEBUG
    # com.hpcloud: debug
    # com.hpcloud.mon.persister.repository: DEBUG

  appenders:

    - type: file
      threshold: INFO
      archive: true
      currentLogFilename: /var/log/mon/mon-persister.log
      archivedLogFilenamePattern: /var/log/mon/mon-persister.log-%d.log.gz
      archivedFileCount: 5
      # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
      timeZone: UTC

# Set the persister ports to 8090/8091 to avoid conflict with the api
server:
  applicationConnectors:
    - type: http
      port: 8090
  adminConnectors:
    - type: http
      port: 8091
