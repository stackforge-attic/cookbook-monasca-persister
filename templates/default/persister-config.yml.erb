#Application Config

metricsPersister:
  enabled: false 

csPersister:
  enabled: <%= @settings['cs']['enabled'] %>
  amqpConsumerEnabled: <%= @settings['cs']['amqpEnabled'] %>
  
  disruptorConfig:
    claimBufferSize: <%= @settings['cs']['claimBufferSize'] %>
    numBatches: 1
    numOutputProcessors: <%= @settings['cs']['num_output_processors'] %>
    enableAmqpOutputProcessor: <%= @settings['cs']['enableAmqpOutputProcessor'] %>
    repositoryType: "vertica"
    schemaName: CS
    enableJournaling: <%= @settings['cs']['enableJournaling'] %>
    <%if @settings['cs']['enableJournaling'] %>
    journalFile: <%= @settings['cs']['journalFile'] %>
    <% end %>

  amqpConsumerConfig:
    exchangeName: "cs_entities"
    queueName: "control-services-sync"
    routingKey: "#"
    declareQueue: false
    prefetchCount: 8192
    connection:
      hosts: 
        <% for @host in @settings['cs']['amqp']['hosts']%>
            - <%= @host %>
        <% end %>
      port: <%= @settings['cs']['amqp']['port'] %>
      username: <%= @settings['cs']['amqp']['user'] %>
      password: <%= @csCreds['cs']['amqp']['password'] %>
      vhost: /cs
      consumerThreadPoolSize: 8

nagiosPersister:
  enabled: <%= @settings['nagios']['enabled'] %>
  amqpConsumerEnabled: <%= @settings['nagios']['amqpEnabled'] %>
  
  disruptorConfig:
    claimBufferSize: <%= @settings['nagios']['claimBufferSize'] %>
    numBatches: 4
    numOutputProcessors: <%= @settings['nagios']['num_output_processors'] %>
    enableAmqpOutputProcessor: <%= @settings['nagios']['enableAmqpOutputProcessor'] %>
    repositoryType: "vertica"
    schemaName: Nagios
    enableJournaling: <%= @settings['nagios']['enableJournaling'] %>
    <%if @settings['nagios']['enableJournaling'] %>
    journalFile: <%= @settings['nagios']['journalFile'] %>
    <% end %>
    
  amqpConsumerConfig:
    exchangeName: "icinga"
    queueName: "som-nagios-consumer"
    routingKey: "#"
    declareQueue: false
    prefetchCount: 1024

    connection:
      hosts: 
        <% for @host in @settings['nagios']['amqp']['hosts']%>
            - <%= @host %>
        <% end %>
      port: <%= @settings['nagios']['amqp']['port'] %>
      username: <%= @settings['nagios']['amqp']['user'] %>
      password: <%= @nagiosCreds['nagios']['amqp']['password'] %>
      vhost: /events
      consumerThreadPoolSize: 8

customMetricsPersister:
  enabled: <%= @settings['customMetrics']['enabled'] %>
  amqpConsumerEnabled: <%= @settings['customMetrics']['amqpEnabled'] %>

  disruptorConfig:
    claimBufferSize: <%= @settings['customMetrics']['disruptor']['claimBufferSize'] %>
    numBatches:  <%= @settings['customMetrics']['disruptor']['numBatches'] %>
    numOutputProcessors: <%= @settings['customMetrics']['disruptor']['numOutputProcessors'] %>
    enableAmqpOutputProcessor: <%= @settings['customMetrics']['disruptor']['enableAmqpOutputProcessor'] %>
    repositoryType: "http"
    schemaName: CustomMetrics
    enableJournaling: <%= @settings['customMetrics']['disruptor']['enableJournaling'] %>
    <%if @settings['customMetrics']['disruptor']['enableJournaling'] %>
    journalFile: <%= @settings['customMetrics']['disruptor']['journalFile'] %>
    <% end %>

  amqpConsumerConfig:
    exchangeName: <%= @settings['customMetrics']['amqp']['exchange'] %>
    queueName: "som-customMetrics-consumer"
    routingKey: "#"
    declareQueue: true
    prefetchCount: 1024
    autoAck: true
    timeToLive: 300000
    connection:
      hosts:
        <% for @host in @settings['customMetrics']['amqp']['hosts']%>
        - <%= @host %>
        <% end %>
      port: <%= @settings['customMetrics']['amqp']['port'] %>
      username: <%= @settings['customMetrics']['amqp']['user'] %>
      password: <%= @customMetricsCreds['customMetrics']['amqp']['password'] %>
      vhost: <%= @settings['customMetrics']['amqp']['vhost'] %>
      consumerThreadPoolSize: 8

  httpProducerConfig:
    endPoints:
    <% for @endPoint in @settings['customMetrics']['http']['endPoints']%>
      - <%= @endPoint %>
    <% end %>
    maxConnections: <%= @settings['customMetrics']['http']['maxConnections'] %>
    keyStore: /etc/ssl/hpcs-keystore.jks
    keyStorePassword: <%= @keystore_pass %>

salesforcePersister:
  enabled: <%= @settings['salesforce']['enabled'] %>
  httpConsumerEnabled: <%= @settings['salesforce']['httpEnabled'] %>

  disruptorConfig:
    claimBufferSize: <%= @settings['salesforce']['claimBufferSize'] %>
    numBatches: 1
    numOutputProcessors: <%= @settings['salesforce']['num_output_processors'] %>
    enableAmqpOutputProcessor: <%= @settings['salesforce']['enableAmqpOutputProcessor'] %>
    repositoryType: "vertica"
    schemaName: SalesForce
    enableJournaling: <%= @settings['salesforce']['enableJournaling'] %>
    <%if @settings['salesforce']['enableJournaling'] %>
    journalFile: <%= @settings['salesforce']['journalFile'] %>
    <% end %>

  httpConsumerConfig:
    username: <%= @settings['salesforce']['http']['user'] %>
    password: <%= @salesforceCreds['salesforce']['http']['password'] %>
    securityToken: <%= @salesforceCreds['salesforce']['http']['securityToken'] %>
    endPoint: <%= @settings['salesforce']['http']['endPoint'] %>
    setTrace: <%= @settings['salesforce']['http']['setTrace'] %>
    proxy: <%= @settings['salesforce']['http']['proxy'] %>
    port: <%= @settings['salesforce']['http']['port'] %>
    apiVersion: <%= @settings['salesforce']['http']['apiVersion'] %>

# Platform config

database:
  driverClass: com.vertica.jdbc.Driver
  url: jdbc:vertica://<%= @settings['db']['host'][node['fqdn']] %>:5433/som
  user: <%= @settings['db']['user'] %>
  password: <%= @dbCreds['db']['password'] %>
  properties:
      ssl: true
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 1

  # the maximum number of connections to keep open

  <%
  #The number of DB connectinos is dependent on the number of persister enabled. This block calculates the number of connections to allow
  num_db_connections = 0
  if @settings['cs']['enabled']
    num_db_connections += 5 + (@settings['cs']['num_output_processors'] * @settings['cs']['connections_per_processor'])
  end
  if @settings['nagios']['enabled']
    num_db_connections += 5 + (@settings['nagios']['num_output_processors'] * @settings['nagios']['connections_per_processor'])
  end
  if @settings['salesforce']['enabled']
    num_db_connections += 5 + (@settings['salesforce']['num_output_processors'] * @settings['salesforce']['connections_per_processor'])
  end
  %>
  maxSize: <%= num_db_connections %>

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # how long a connection must be held before it can be validated
  checkConnectionHealthWhenIdleFor: 10s

  # the maximum lifetime of an idle connection
  closeConnectionIfIdleFor: 1 minute

# HTTP-specific options.
http:

  # The port on which the HTTP server listens for service requests.
  port: 8080

  # The port on which the HTTP server listens for administrative requests.
  adminPort: 8081

  # Maximum number of threads.
  maxThreads: 100

  # Minimum number of thread to keep alive.
  minThreads: 10

  # The type of connector to use. Other valid values are "nonblocking" or "legacy". In general, the
  # blocking connector should be used for low-latency services with short request durations. The
  # nonblocking connector should be used for services with long request durations or which
  # specifically take advantage of Jetty's continuation support.
  # If you need SSL support, you can either choose from "nonblocking+ssl" or "legacy+ssl".
  connectorType: blocking

  # The maximum amount of time a connection is allowed to be idle before being closed.
  maxIdleTime: 1s

  # The number of threads dedicated to accepting connections. If omitted, this defaults to the
  # number of logical CPUs on the current machine.
  acceptorThreads: 3

  # The offset of the acceptor threads' priorities. Can be [-5...5], with -5 dropping the acceptor
  # threads to the lowest possible priority and with 5 raising them to the highest priority.
  acceptorThreadPriorityOffset: 0

  # The number of unaccepted requests to keep in the accept queue before refusing connections. If
  # set to -1 or omitted, the system default is used.
  acceptQueueSize: 100

  # The maximum number of buffers to keep in memory.
  maxBufferCount: 1024

  # The initial buffer size for reading requests.
  requestBufferSize: 32KB

  # The initial buffer size for reading request headers.
  requestHeaderBufferSize: 6KB

  # The initial buffer size for writing responses.
  responseBufferSize: 32KB

  # The initial buffer size for writing response headers.
  responseHeaderBufferSize: 6KB

  # Enables SO_REUSEADDR on the server socket.
  reuseAddress: true

  # Enables SO_LINGER on the server socket with the specified linger time.
  soLingerTime: 1s

  # The number of open connections at which the server transitions to a "low-resources" mode.
  lowResourcesConnectionThreshold: 25000

  # When in low-resources mode, the maximum amount of time a connection is allowed to be idle before
  # being closed. Overrides maxIdleTime.
  lowResourcesMaxIdleTime: 5s

  # If non-zero, the server will allow worker threads to finish processing requests after the server
  # socket has been closed for the given amount of time.
  shutdownGracePeriod: 2s

  # If true, the HTTP server will prefer X-Forwarded headers over their non-forwarded equivalents.
  useForwardedHeaders: true

  # If true, forces the HTTP connector to use off-heap, direct buffers.
  useDirectBuffers: true

  # The hostname of the interface to which the HTTP server socket wil be found. If omitted, the
  # socket will listen on all interfaces.
  # bindHost: app1.example.com

  ssl:
    trustStore: /etc/ssl/hpcs-keystore.jks
    trustStorePassword: <%= @keystore_pass %>

 
  # HTTP request log settings
  requestLog:
    # Settings for logging to stdout.
    console:
      # If true, addToBatch log statements to stdout.
      enabled: false

    # Settings for logging to a file. Possibly to move to this and off syslog if we end up with man http requests
    file:
      # If true, addToBatch log statements to a file.
      enabled: false

      # The file to which statements will be logged.
      currentLogFilename: ./logs/som-metrics-persister-requests.log

      #  When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
      # example.log will be truncated, and new statements written to it.
      archivedLogFilenamePattern: ./logs/som-metrics-persister-requests-%d.log.gz

      # The maximum number of log files to archive.
      archivedFileCount: 5

    # Settings for logging to syslog.
    syslog:

      # If true, addToBatch log statements to syslog.
      enabled: true

      # The hostname of the syslog server to which statements will be sent.
      # N.B.: If this is the local host, the local syslog instance will need to be configured to
      # listen on an inet socket, not just a Unix socket.
      host: localhost

      # The syslog facility to which statements will be sent.
      facility: local0

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    com.hpcloud: INFO
    com.hpcloud.som: INFO
    com.yammer.metrics.reporting.JmxReporter: ERROR

# Settings for logging to a file.
  file:
    # If true, addToBatch log statements to a file.
    enabled: true
    # Do not addToBatch log statements below this threshold to the file.
    threshold: ALL
    # The file to which statements will be logged.
    currentLogFilename: /var/log/som/persister.log
    #  When the log file rolls over, the file will be archived to example-2012-03-15.log.gz,
    # example.log will be truncated, and new statements written to it.
    archivedLogFilenamePattern: /var/log/som/persister%d.log.gz
    # The maximum number of log files to archive.
    archivedFileCount: 10

  # Settings for logging to stdout.
  console:

    # If true, addToBatch log statements to stdout.
    enabled: false

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

  # Settings for logging to syslog.
  syslog:

    # If true, addToBatch log statements to syslog.
    enabled: false

    # The hostname of the syslog server to which statements will be sent.
    # N.B.: If this is the local host, the local syslog instance will need to be configured to
    # listen on an inet socket, not just a Unix socket.
    host: localhost

    # The syslog facility to which statements will be sent.
    facility: local0
